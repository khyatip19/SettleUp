{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:8080/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Users API\nexport const usersAPI = {\n  getAll: () => api.get('/users'),\n  getById: id => api.get(`/users/${id}`),\n  create: user => api.post('/users', user),\n  update: (id, user) => api.put(`/users/${id}`, user),\n  delete: id => api.delete(`/users/${id}`)\n};\n\n// Groups API\nexport const groupsAPI = {\n  getAll: () => api.get('/groups'),\n  getById: id => api.get(`/groups/${id}`),\n  create: group => api.post('/groups', group),\n  delete: id => api.delete(`/groups/${id}`),\n  addMember: (groupId, userId) => api.post(`/groups/${groupId}/members/${userId}`)\n};\n\n// Expenses API\nexport const expensesAPI = {\n  getAll: () => api.get('/expense'),\n  getById: id => api.get(`/expense/${id}`),\n  create: expense => api.post('/expense', expense),\n  delete: id => api.delete(`/expense/${id}`),\n  addExpense: (groupId, paidById, amount, description) => api.post('/expense/add', null, {\n    params: {\n      groupId,\n      paidById,\n      amount,\n      description\n    }\n  })\n};\n\n// Splits API\nexport const splitsAPI = {\n  getByUser: userId => api.get(`/splits/user/${userId}`),\n  getByExpense: expenseId => api.get(`/splits/expense/${expenseId}`),\n  getUserBalanceInGroup: (userId, groupId) => api.get(`/splits/balance/user/${userId}/group/${groupId}`),\n  getPendingByGroup: groupId => api.get(`/splits/pending/group/${groupId}`),\n  markAsPaid: splitId => api.put(`/splits/${splitId}/mark-paid`),\n  markAsSettled: splitId => api.put(`/splits/${splitId}/mark-settled`),\n  updateAmount: (splitId, newAmount) => api.put(`/splits/${splitId}/amount`, null, {\n    params: {\n      newAmount\n    }\n  }),\n  delete: splitId => api.delete(`/splits/${splitId}`),\n  getTotalOwedByUser: userId => api.get(`/splits/total-owed/user/${userId}`),\n  getByUserAndExpense: (userId, expenseId) => api.get(`/splits/user/${userId}/expense/${expenseId}`)\n};\n\n// Test API\nexport const testAPI = {\n  getDataSummary: () => api.get('/test/data-summary'),\n  getUserBalances: () => api.get('/test/user-balances'),\n  getGroupSplits: groupId => api.get(`/test/group/${groupId}/splits`),\n  testSplitCreation: () => api.get('/test/test-split-creation')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","headers","usersAPI","getAll","get","getById","id","user","post","update","put","delete","groupsAPI","group","addMember","groupId","userId","expensesAPI","expense","addExpense","paidById","amount","description","params","splitsAPI","getByUser","getByExpense","expenseId","getUserBalanceInGroup","getPendingByGroup","markAsPaid","splitId","markAsSettled","updateAmount","newAmount","getTotalOwedByUser","getByUserAndExpense","testAPI","getDataSummary","getUserBalances","getGroupSplits","testSplitCreation"],"sources":["C:/Users/khyat/Downloads/Splitwise-Clone/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_BASE_URL = 'http://localhost:8080/api';\n\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json',\n  },\n});\n\n// Users API\nexport const usersAPI = {\n    getAll: () => api.get('/users'),\n    getById: (id) => api.get(`/users/${id}`),\n    create: (user) => api.post('/users', user),\n    update: (id, user) => api.put(`/users/${id}`, user),\n    delete: (id) => api.delete(`/users/${id}`),\n};\n\n// Groups API\nexport const groupsAPI = {\n  getAll: () => api.get('/groups'),\n  getById: (id) => api.get(`/groups/${id}`),\n  create: (group) => api.post('/groups', group),\n  delete: (id) => api.delete(`/groups/${id}`),\n  addMember: (groupId, userId) => api.post(`/groups/${groupId}/members/${userId}`),\n};\n\n// Expenses API\nexport const expensesAPI = {\n  getAll: () => api.get('/expense'),\n  getById: (id) => api.get(`/expense/${id}`),\n  create: (expense) => api.post('/expense', expense),\n  delete: (id) => api.delete(`/expense/${id}`),\n  addExpense: (groupId, paidById, amount, description) => \n    api.post('/expense/add', null, {\n      params: { groupId, paidById, amount, description }\n    }),\n};\n\n// Splits API\nexport const splitsAPI = {\n  getByUser: (userId) => api.get(`/splits/user/${userId}`),\n  getByExpense: (expenseId) => api.get(`/splits/expense/${expenseId}`),\n  getUserBalanceInGroup: (userId, groupId) => api.get(`/splits/balance/user/${userId}/group/${groupId}`),\n  getPendingByGroup: (groupId) => api.get(`/splits/pending/group/${groupId}`),\n  markAsPaid: (splitId) => api.put(`/splits/${splitId}/mark-paid`),\n  markAsSettled: (splitId) => api.put(`/splits/${splitId}/mark-settled`),\n  updateAmount: (splitId, newAmount) => api.put(`/splits/${splitId}/amount`, null, {\n    params: { newAmount }\n  }),\n  delete: (splitId) => api.delete(`/splits/${splitId}`),\n  getTotalOwedByUser: (userId) => api.get(`/splits/total-owed/user/${userId}`),\n  getByUserAndExpense: (userId, expenseId) => api.get(`/splits/user/${userId}/expense/${expenseId}`),\n};\n\n// Test API\nexport const testAPI = {\n  getDataSummary: () => api.get('/test/data-summary'),\n  getUserBalances: () => api.get('/test/user-balances'),\n  getGroupSplits: (groupId) => api.get(`/test/group/${groupId}/splits`),\n  testSplitCreation: () => api.get('/test/test-split-creation'),\n};\n\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}